<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Menu - Canteen Order</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');
    body {
      font-family: 'Inter', sans-serif;
    }

    #cartBottomSheet {
      transform: translateY(100%);
      transition: transform 0.3s ease-in-out;
    }

    #cartBottomSheet.open {
      transform: translateY(0%);
    }

    /* Loader Spinner */
    #loader {
      position: fixed;
      inset: 0;
      background: white;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 50;
    }

    .loader {
      border: 4px solid #f3f3f3;
      border-top: 4px solid #10b981;
      border-radius: 50%;
      width: 36px;
      height: 36px;
      animation: spin 0.8s linear infinite;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    .hide-scrollbar::-webkit-scrollbar {
      display: none;
    }
    
    .hide-scrollbar {
      -ms-overflow-style: none;
      scrollbar-width: none;
    }
  </style>
</head>
<body class="bg-white min-h-screen flex flex-col relative">

  <!-- Loader -->
  <div id="loader">
    <div class="loader"></div>
  </div>

  <!-- Top Bar -->
  <header class="bg-white shadow p-4 z-10">
    <h1 class="text-lg font-bold text-green-500 mb-2">Samskritii Food Stall</h1>
    <div class="mb-3">
      <input
        type="text"
        id="searchInput"
        placeholder="Search items..."
        oninput="searchItems()"
        class="w-full border rounded px-3 py-2 focus:outline-none focus:ring focus:border-green-300 text-sm"
      />
    </div>
    <div class="overflow-x-auto hide-scrollbar">
      <ul class="flex space-x-3">
        <li>
          <button
            class="px-4 py-1 bg-white text-green-500 border border-green-500 rounded hover:bg-green-100 text-sm whitespace-nowrap"
            onclick="filterBySection('All')"
          >All</button>
        </li>
        <% sections.forEach(section => { %>
          <li>
            <button
              class="px-4 py-1 bg-white text-green-500 border border-green-500 rounded hover:bg-green-100 text-sm whitespace-nowrap"
              onclick="filterBySection('<%= section %>')"
            ><%= section %></button>
          </li>
        <% }) %>
      </ul>
    </div>
  </header>

  <!-- Main Content -->
  <main class="flex-1 p-4 overflow-y-auto pb-28">
    <div class="grid grid-cols-2 gap-3">
      <% foodItems.forEach(item => { %>
        <div
          class="food-card bg-white rounded-lg shadow-sm p-2 flex flex-col border relative"
          data-section="<%= item.section %>"
          data-name="<%= item.name %>"
        >
          <img
            src="<%= item.imageUrl %>"
            alt="<%= item.name %>"
            class="w-full h-24 object-cover rounded mb-2"
          />
          <h3 class="font-semibold text-sm mb-1 text-green-800 leading-tight truncate">
            <%= item.name %>
          </h3>
          <p class="text-xs text-gray-500 mb-1 truncate">
            <%= item.subsection || "No subsection" %>
          </p>
          <div class="flex items-center justify-between mt-auto">
            <p class="text-sm text-gray-600 font-semibold">
              ₹<%= item.price %>
            </p>
            <!-- Item Actions: Initially show Add button; later shows minus, quantity & plus -->
            <div id="item-<%= item._id %>-actions" data-name="<%= item.name %>" data-price="<%= item.price %>" class="flex items-center space-x-2">
              <button id="add-btn-<%= item._id %>" onclick="addToCart('<%= item._id %>', '<%= item.name %>', <%= item.price %>); updateItemCard('<%= item._id %>');" class="bg-green-500 text-white text-xs p-2 rounded hover:bg-green-600 transition flex items-center justify-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none"
                     viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4" />
                </svg>
              </button>
            </div>
          </div>
        </div>
      <% }) %>
    </div>
    <!-- Note after the last item card -->
    <p class="text-xs text-center text-gray-500 mt-4">
      Note: Images shown on the menu are for illustration purposes only. Actual items may vary.
    </p>
  </main>

  <!-- Bottom Bar -->
  <div class="fixed bottom-0 left-0 right-0 bg-white border-t shadow-md px-4 py-3 flex items-center justify-between z-20">
    <span class="text-sm text-gray-700 font-semibold">
      Total: ₹<span id="totalAmount">0.00</span>
    </span>
    <button
      class="bg-green-500 text-white text-sm px-4 py-2 rounded hover:bg-green-600 transition disabled:opacity-50"
      onclick="toggleCartSheet()"
    >
      View Cart
    </button>
  </div>

  <!-- Bottom Sheet Cart -->
  <div id="cartBottomSheet" class="fixed bottom-0 left-0 right-0 bg-white rounded-t-xl shadow-2xl p-4 z-50">
    <div class="flex items-center justify-between mb-4">
      <span class="text-gray-700 font-semibold">Review Items</span>
      <button class="text-gray-400 hover:text-gray-600" onclick="toggleCartSheet()">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none"
             viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"/>
        </svg>
      </button>
    </div>
    <div id="cartItems" class="space-y-3 mb-4"></div>
    <form id="placeOrderForm" action="/orders/place/<%= orderId %>" method="POST" class="flex items-center justify-between">
      <input type="hidden" name="items" id="itemsInput" />
      <button type="submit"
              class="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 transition disabled:opacity-50 w-full flex items-center justify-center gap-2"
              id="placeOrderBtn"
              disabled>
        <span id="placeOrderText">Place Order</span>
        <!-- New round ring loader -->
        <div id="placeOrderLoader" class="hidden border-2 border-white border-t-transparent rounded-full w-4 h-4 animate-spin"></div>
      </button>
    </form>
  </div>

  <script>
    // Show/hide loader
    window.addEventListener("load", () => {
      document.getElementById("loader").style.display = "none";
    });

    // Global cart object
    const cart = {};
    const cartItemsDiv = document.getElementById('cartItems');
    const totalAmountEl = document.getElementById('totalAmount');
    const placeOrderBtn = document.getElementById('placeOrderBtn');
    const itemsInput = document.getElementById('itemsInput');
    const cartBottomSheet = document.getElementById('cartBottomSheet');

    function toggleCartSheet() {
      cartBottomSheet.classList.toggle('open');
    }

    // Add to cart and update the food card actions
    function addToCart(id, name, price) {
      const qty = 1;
      if (cart[id]) {
        cart[id].quantity += qty;
      } else {
        cart[id] = { id, name, price, quantity: qty };
      }
      updateCartDisplay();
    }

    // Update the UI actions on the individual food card
    function updateItemCard(itemId) {
      const actionsDiv = document.getElementById(`item-${itemId}-actions`);
      // Get the name and price from data attributes (if needed)
      const name = actionsDiv.getAttribute('data-name');
      const price = actionsDiv.getAttribute('data-price');
      if (cart[itemId]) {
        actionsDiv.innerHTML = `
          <button onclick="changeQty('${itemId}', -1)" class="bg-red-500 text-white text-xs p-2 rounded hover:bg-red-600 transition">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none"
                 viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M20 12H4" />
            </svg>
          </button>
          <span id="item-quantity-${itemId}" class="text-xs font-semibold text-gray-700">${cart[itemId].quantity}</span>
          <button onclick="changeQty('${itemId}', 1)" class="bg-green-500 text-white text-xs p-2 rounded hover:bg-green-600 transition">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none"
                 viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4" />
            </svg>
          </button>
        `;
      } else {
        actionsDiv.innerHTML = `
          <button id="add-btn-${itemId}" onclick="addToCart('${itemId}', '${name}', ${price}); updateItemCard('${itemId}')" class="bg-green-500 text-white text-xs p-2 rounded hover:bg-green-600 transition flex items-center justify-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none"
                 viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4" />
            </svg>
          </button>
        `;
      }
    }

    // Update cart display in the bottom sheet and also update the food card UI
    function updateCartDisplay() {
      cartItemsDiv.innerHTML = "";
      let total = 0;
      for (const id in cart) {
        const item = cart[id];
        const itemTotal = item.price * item.quantity;
        total += itemTotal;
        const div = document.createElement('div');
        div.className = "flex justify-between items-center border-b pb-1";
        div.innerHTML = `
          <div>
            <p class="text-sm font-medium text-green-800">${item.name}</p>
            <p class="text-xs text-gray-500">
              Qty: ${item.quantity} | ₹${itemTotal.toFixed(2)}
            </p>
          </div>
          <div class="flex gap-1">
            <button onclick="changeQty('${id}', -1)" class="bg-gray-200 text-xs p-1 rounded">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none"
                   viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M20 12H4" />
              </svg>
            </button>
            <button onclick="changeQty('${id}', 1)" class="bg-gray-200 text-xs p-1 rounded">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none"
                   viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4" />
              </svg>
            </button>
            <button onclick="removeItem('${id}')" class="bg-red-400 text-white text-xs p-1 rounded">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none"
                   viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round"
                      d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5-4h4a2 2 0 012 2v0a2 2 0 01-2 2H9a2 2 0 01-2-2v0a2 2 0 012-2z"/>
              </svg>
            </button>
          </div>
        `;
        cartItemsDiv.appendChild(div);
        // Update the UI for each food card with the current quantity if applicable
        updateItemCard(id);
      }
      totalAmountEl.innerText = total.toFixed(2);
      itemsInput.value = JSON.stringify(Object.values(cart));
      placeOrderBtn.disabled = Object.keys(cart).length === 0;
    }

    // Change item quantity and update both the cart and food card UI
    function changeQty(id, delta) {
      if (cart[id]) {
        cart[id].quantity += delta;
        if (cart[id].quantity <= 0) {
          delete cart[id];
        }
        updateCartDisplay();
        updateItemCard(id);
      }
    }

    function removeItem(id) {
      delete cart[id];
      updateCartDisplay();
      updateItemCard(id);
    }

    let currentSection = 'All';
    let currentSearch = '';

    function filterBySection(section) {
      currentSection = section;
      applyFilters();
    }

    function searchItems() {
      currentSearch = document.getElementById('searchInput').value.trim().toLowerCase();
      applyFilters();
    }

    function applyFilters() {
      const cards = document.querySelectorAll('.food-card');
      cards.forEach(card => {
        const itemSection = card.getAttribute('data-section');
        const itemName = card.getAttribute('data-name').toLowerCase();
        const matchesSection = (currentSection === 'All' || itemSection === currentSection);
        const matchesSearch = itemName.includes(currentSearch);
        card.style.display = (matchesSection && matchesSearch) ? 'block' : 'none';
      });
    }
  </script>
</body>
</html>
