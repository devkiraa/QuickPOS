<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Menu - Canteen Order</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');
    body {
      font-family: 'Inter', sans-serif;
    }
    /* Hide the bottom sheet by default */
    #cartBottomSheet {
      transform: translateY(100%);
      transition: transform 0.3s ease-in-out;
    }
    /* When toggled, bring it into view */
    #cartBottomSheet.open {
      transform: translateY(0%);
    }
  </style>
</head>
<body class="bg-white min-h-screen flex flex-col">

  <!-- Top Bar with Category + Search -->
  <header class="bg-white shadow p-4">
    <div class="mb-3">
      <!-- Search Input -->
      <input
        type="text"
        id="searchInput"
        placeholder="Search items..."
        oninput="searchItems()"
        class="w-full border rounded px-3 py-2 focus:outline-none focus:ring focus:border-green-300 text-sm"
      />
    </div>

    <!-- Horizontal Category Menu (fetched from DB, includes "All") -->
    <div class="overflow-x-auto">
      <ul class="flex space-x-3">
        <!-- “All” Category -->
        <li>
          <button
            class="px-4 py-1 bg-white text-green-500 border border-green-500 rounded hover:bg-green-100 text-sm"
            onclick="filterBySection('All')"
          >
            All
          </button>
        </li>
        <% sections.forEach(section => { %>
          <li>
            <button
              class="px-4 py-1 bg-white text-green-500 border border-green-500 rounded hover:bg-green-100 text-sm"
              onclick="filterBySection('<%= section %>')"
            >
              <%= section %>
            </button>
          </li>
        <% }) %>
      </ul>
    </div>
  </header>

  <!-- Main Content: Items Grid -->
  <main class="flex-1 p-4 overflow-y-auto">
    <div class="grid grid-cols-2 gap-3">
      <% foodItems.forEach(item => { %>
        <!-- Single item card -->
        <div
          class="food-card bg-white rounded-lg shadow-sm p-2 flex flex-col border relative"
          data-section="<%= item.section %>"
          data-name="<%= item.name %>"
        >
          <!-- Item Image -->
          <img
            src="<%= item.imageUrl %>"
            alt="<%= item.name %>"
            class="w-full h-24 object-cover rounded mb-2"
          />
          <!-- Name & Subsection -->
          <h3 class="font-semibold text-sm mb-1 text-green-800 leading-tight">
            <%= item.name %>
          </h3>
          <% if (item.subsection) { %>
            <p class="text-xs text-gray-500 mb-1 leading-tight">
              <%= item.subsection %>
            </p>
          <% } else { %>
            <p class="text-xs text-gray-400 mb-1">No subsection</p>
          <% } %>
          <!-- Price and Add Button Inline -->
          <div class="flex items-center justify-between">
            <p class="text-sm text-gray-600 font-semibold">
              ₹<%= item.price %>
            </p>
            <!-- Add Button with SVG Icon -->
            <button
              onclick="addToCart('<%= item._id %>', '<%= item.name %>', '<%= item.price %>')"
              class="bg-green-500 text-white text-xs p-2 rounded hover:bg-green-600 transition flex items-center justify-center"
            >
              <!-- Plus Icon -->
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" 
                   viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4" />
              </svg>
            </button>
          </div>
        </div>
      <% }) %>
    </div>
  </main>

  <!-- Bottom Bar: shows total price & "View Cart" button -->
  <div
    class="fixed bottom-0 left-0 right-0 bg-white border-t shadow-md px-4 py-3 flex items-center justify-between"
    style="z-index: 10;"
  >
    <!-- Total price text -->
    <span class="text-sm text-gray-700 font-semibold">
      Total: ₹<span id="totalAmount">0.00</span>
    </span>
    <!-- "View Cart" button toggles the bottom sheet -->
    <button
      class="bg-green-500 text-white text-sm px-4 py-2 rounded hover:bg-green-600 transition disabled:opacity-50"
      onclick="toggleCartSheet()"
    >
      View Cart
    </button>
  </div>

  <!-- Bottom Sheet: Cart details -->
  <div
    id="cartBottomSheet"
    class="fixed bottom-0 left-0 right-0 bg-white rounded-t-xl shadow-2xl p-4 z-50"
  >
    <!-- Header row -->
    <div class="flex items-center justify-between mb-4">
      <span class="text-gray-700 font-semibold">Review Items</span>
      <button
        class="text-gray-400 hover:text-gray-600"
        onclick="toggleCartSheet()"
      >
        <!-- Close Icon -->
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none"
             viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"/>
        </svg>
      </button>
    </div>
    <!-- Cart items container -->
    <div id="cartItems" class="space-y-3 mb-4"></div>

    <!-- Place Order Form (hidden input) -->
    <form
      id="placeOrderForm"
      action="/orders/place/<%= orderId %>"
      method="POST"
      class="flex items-center justify-between"
    >
      <input type="hidden" name="items" id="itemsInput" />
      <button
        type="submit"
        class="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 transition disabled:opacity-50 w-full"
        id="placeOrderBtn"
        disabled
      >
        Place Order
      </button>
    </form>
  </div>

  <script>
    // CART LOGIC (unchanged, except addToCart now always uses quantity 1)
    const cart = {};
    const cartItemsDiv = document.getElementById('cartItems');
    const totalAmountEl = document.getElementById('totalAmount');
    const placeOrderBtn = document.getElementById('placeOrderBtn');
    const itemsInput = document.getElementById('itemsInput');
    const cartBottomSheet = document.getElementById('cartBottomSheet');

    function toggleCartSheet() {
      cartBottomSheet.classList.toggle('open');
    }

    function addToCart(id, name, price) {
      const qty = 1; // Always add one unit
      if (cart[id]) {
        cart[id].quantity += qty;
      } else {
        cart[id] = { id, name, price, quantity: qty };
      }
      updateCartDisplay();
    }

    function updateCartDisplay() {
      cartItemsDiv.innerHTML = "";
      let total = 0;
      for (const id in cart) {
        const item = cart[id];
        const itemTotal = item.price * item.quantity;
        total += itemTotal;
        const div = document.createElement('div');
        div.className = "flex justify-between items-center border-b pb-1";
        div.innerHTML = `
          <div>
            <p class="text-sm font-medium text-green-800">${item.name}</p>
            <p class="text-xs text-gray-500">
              Qty: ${item.quantity} | ₹${itemTotal.toFixed(2)}
            </p>
          </div>
          <div class="flex gap-1">
            <button
              onclick="changeQty('${id}', -1)"
              class="bg-gray-200 text-xs p-1 rounded flex items-center justify-center"
            >
              <!-- Minus Icon -->
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" 
                   viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M20 12H4" />
              </svg>
            </button>
            <button
              onclick="changeQty('${id}', 1)"
              class="bg-gray-200 text-xs p-1 rounded flex items-center justify-center"
            >
              <!-- Plus Icon -->
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" 
                   viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4" />
              </svg>
            </button>
            <button
              onclick="removeItem('${id}')"
              class="bg-red-400 text-white text-xs p-1 rounded flex items-center justify-center"
            >
              <!-- Trash Icon -->
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" 
                   viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" 
                      d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5-4h4a2 2 0 012 2v0a2 2 0 01-2 2H9a2 2 0 01-2-2v0a2 2 0 012-2z" />
              </svg>
            </button>
          </div>
        `;
        cartItemsDiv.appendChild(div);
      }
      totalAmountEl.innerText = total.toFixed(2);
      itemsInput.value = JSON.stringify(Object.values(cart));
      placeOrderBtn.disabled = Object.keys(cart).length === 0;
    }

    function changeQty(id, delta) {
      if (cart[id]) {
        cart[id].quantity += delta;
        if (cart[id].quantity <= 0) {
          delete cart[id];
        }
        updateCartDisplay();
      }
    }

    function removeItem(id) {
      delete cart[id];
      updateCartDisplay();
    }

    // FILTER LOGIC (unchanged)
    let currentSection = 'All';
    let currentSearch = '';

    function filterBySection(section) {
      currentSection = section;
      applyFilters();
    }

    function searchItems() {
      const searchInput = document.getElementById('searchInput');
      currentSearch = searchInput.value.trim().toLowerCase();
      applyFilters();
    }

    function applyFilters() {
      const cards = document.querySelectorAll('.food-card');
      cards.forEach(card => {
        const itemSection = card.getAttribute('data-section');
        const itemName = card.getAttribute('data-name').toLowerCase();
        const matchesSection = (currentSection === 'All' || itemSection === currentSection);
        const matchesSearch = itemName.includes(currentSearch);
        card.style.display = (matchesSection && matchesSearch) ? 'block' : 'none';
      });
    }
  </script>
</body>
</html>
