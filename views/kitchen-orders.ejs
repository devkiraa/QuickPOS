<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Kitchen Orders – Canteen POS</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="icon" type="image/png" href="/favicon.png" />
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet" />
  <script>
    tailwind.config = {
      theme: {
        extend: {
          fontFamily: {
            sans: ['Poppins', 'sans-serif']
          }
        }
      }
    };
  </script>
</head>
<body class="bg-gray-100 text-gray-800 font-sans">

  <div class="flex h-screen">
    <aside class="w-64 bg-white shadow-md hidden md:block">
      <div class="p-6 text-green-700 text-2xl font-bold">Canteen POS</div>
      <nav class="px-4">
        <a href="/dashboard" class="block py-2 px-3 rounded hover:bg-green-100 font-medium text-gray-700">Dashboard</a>
        <a href="/dashboard/analytics" class="block py-2 px-3 rounded hover:bg-green-100 font-medium text-gray-700">Analytics</a>
        <a href="/dashboard/orders" class="block py-2 px-3 rounded hover:bg-green-100 font-medium text-gray-700">Orders</a>
        <a href="/kitchen" class="block py-2 px-3 rounded bg-green-100 text-green-700 font-semibold">Kitchen</a>
        <a href="/dashboard/logout" class="block py-2 px-3 mt-4 text-red-600 hover:bg-red-100 rounded font-medium">Logout</a>
      </nav>
    </aside>

    <main class="flex-1 overflow-y-auto p-6">
      <h1 class="text-2xl font-bold text-green-700 mb-6">Kitchen Orders (Paid)</h1>

      <% const preparingOrders = orders.filter(o => o.order_status !== 'Order Completed'); %>
      <% const completedOrders = orders.filter(o => o.order_status === 'Order Completed'); %>

      <section class="mb-10">
        <h2 class="text-xl font-semibold text-yellow-600 mb-3">Preparing</h2>
        <% if (preparingOrders.length === 0) { %>
          <p class="text-gray-500 mb-6">No orders currently being prepared.</p>
        <% } else { %>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <% preparingOrders.forEach(order => { %>
              <div class="relative bg-white shadow rounded p-4 border-l-4 <%= order.order_status === 'Out of Stock' ? 'border-red-500' : 'border-yellow-500' %>">

                <h2 class="text-lg font-semibold mb-1">Order #<%= order.orderNumber || order.orderId %></h2>
                <p class="text-sm text-gray-700 mb-2">Customer: <%= order.customerName %> | <%= order.mobile %></p>
                <ul class="mb-4 text-sm list-disc pl-5">
                  <% order.items.forEach(item => { %>
                    <% if (item.foodItem) { %>
                      <li><%= item.foodItem.name %> x <%= item.quantity %></li>
                    <% } else { %>
                      <li class="text-red-500">[Deleted Item] x <%= item.quantity %></li>
                    <% } %>
                  <% }) %>
                </ul>
                <div class="flex gap-2">
                  <form action="/kitchen/complete" method="POST">
                    <input type="hidden" name="orderId" value="<%= order._id %>" />
                    <button type="submit" class="bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded text-sm">Mark Completed</button>
                  </form>
                  <button onclick="openOutOfStockModal('<%= order._id %>')" class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded text-sm">Mark Out of Stock</button>
                </div>
                <p class="text-xs text-gray-500 mt-2">Status: <%= order.order_status %></p>
              </div>              
            <% }) %>
          </div>
        <% } %>
      </section>
      

      <div id="outOfStockModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
        <div class="bg-white p-6 rounded shadow-md w-full max-w-md">
          <h3 class="text-lg font-bold mb-4 text-red-600">Mark Items Out of Stock</h3>
          <form id="outOfStockForm" method="POST" action="/kitchen/out-of-stock">
            <input type="hidden" name="orderId" id="outOfStockOrderId" />
            <div id="outOfStockItems" class="mb-4 space-y-2"></div>
            <div class="flex justify-end gap-2">
              <button type="button" onclick="closeOutOfStockModal()" class="px-3 py-1 bg-gray-200 rounded">Cancel</button>
              <button type="submit" class="px-3 py-1 bg-red-500 text-white rounded">Submit</button>
            </div>
          </form>
        </div>
      </div>

      <section>
        <h2 class="text-xl font-semibold text-green-700 mb-3">Completed Orders</h2>
        <% if (completedOrders.length === 0) { %>
          <p class="text-gray-500">No completed orders yet.</p>
        <% } else { %>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <% completedOrders.forEach(order => { %>
              <div class="bg-white shadow rounded p-4 border-l-4 border-green-500">
                <h2 class="text-lg font-semibold mb-1">Order #<%= order.orderNumber || order.orderId %></h2>
                <p class="text-sm text-gray-700 mb-2">Customer: <%= order.customerName %> | <%= order.mobile %></p>
                <ul class="mb-4 text-sm list-disc pl-5">
                  <% order.items.forEach(item => {
                      const foodId = item.foodItem?._id?.toString() || item.foodItem?.toString();
                      const foodName = item.foodItem?.name || order.orderData?.[foodId]?.name || '[Deleted Item]';
                  %>
                    <li class="<%= foodName === '[Deleted Item]' ? 'text-red-500' : '' %>"><%= foodName %> x <%= item.quantity %></li>
                  <% }) %>
                </ul>
                <p class="text-xs text-gray-500 mt-2">Status: <%= order.order_status %></p>
              </div>
            <% }) %>
          </div>
        <% } %>
      </section>
    </main>
  </div>

  <script>
    const orders = <%- JSON.stringify(orders) %>;

    function openOutOfStockModal(orderId) {
      const modal = document.getElementById('outOfStockModal');
      const orderInput = document.getElementById('outOfStockOrderId');
      const itemContainer = document.getElementById('outOfStockItems');
      const order = orders.find(o => o._id === orderId);
      if (!order) return;

      orderInput.value = orderId;
      itemContainer.innerHTML = '';

      order.items.forEach(item => {
        const name = item.foodItem?.name || 'Deleted Item';
        if (name === 'Deleted Item') return;
        const label = document.createElement('label');
        label.className = "flex items-center gap-2";
        label.innerHTML = `
          <input type="checkbox" name="outOfStockItems[]" value="${item.foodItem._id}" class="accent-red-500" />
          <span>${name} × ${item.quantity}</span>
        `;
        itemContainer.appendChild(label);
      });

      modal.classList.remove('hidden');
      modal.classList.add('flex');
    }

    function closeOutOfStockModal() {
      const modal = document.getElementById('outOfStockModal');
      modal.classList.add('hidden');
      modal.classList.remove('flex');
    }
  </script>
</body>
</html>