<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Dashboard - Canteen POS</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- Include QRCode.js -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
</head>
<body class="bg-green-100 font-sans">
  <!-- Notification Div (initially hidden) -->
  <div id="notification" class="fixed top-0 left-0 right-0 bg-green-500 text-white p-4 text-center hidden"></div>

  <div class="flex min-h-screen">
    <!-- Left Sidebar -->
    <aside class="w-64 bg-white shadow-md flex flex-col">
      <div class="p-6">
        <h2 class="text-2xl font-bold text-green-600">Canteen Logo</h2>
      </div>
      <nav class="flex-1">
        <ul>
          <li><a href="/dashboard" class="block py-3 px-6 hover:bg-green-50">Home</a></li>
          <li><a href="/orders/list" class="block py-3 px-6 hover:bg-green-50">Order List</a></li>
          <li><a href="/dashboard/settings" class="block py-3 px-6 hover:bg-green-50">Settings</a></li>
        </ul>
      </nav>
      <div class="p-6 border-t">
        <div class="flex items-center">
          <span class="ml-3 text-green-600 font-semibold"><%= user.username %></span>
          <a href="/dashboard/logout" class="ml-auto text-red-500 hover:underline">Logout</a>
        </div>
      </div>
    </aside>

    <!-- Main Content Area -->
    <div class="flex-1 flex flex-col">
      <!-- Top Bar (simplified) -->
      <header class="bg-white shadow p-4"></header>

      <!-- Sub-Header for search -->
      <div class="bg-green-50 p-4">
        <input type="text" placeholder="Search items..." class="w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-green-400">
      </div>

      <div class="flex flex-1 overflow-hidden">
        <!-- Main Panel: Food Menu -->
        <main class="flex-1 p-6 overflow-y-auto">
          <!-- Horizontal Category Menu (fetched from DB, includes "All") -->
          <div class="mb-6">
            <ul class="flex space-x-4">
              <li>
                <a href="#"
                   class="px-4 py-2 bg-white text-green-500 border border-green-500 rounded hover:bg-green-100"
                   onclick="filterBySection('All')">
                  All
                </a>
              </li>
              <% sections.forEach(section => { %>
                <li>
                  <a href="#"
                     class="px-4 py-2 bg-white text-green-500 border border-green-500 rounded hover:bg-green-100"
                     onclick="filterBySection('<%= section %>')">
                    <%= section %>
                  </a>
                </li>
              <% }) %>
            </ul>
          </div>

          <!-- Special Menu Grid -->
          <h2 class="text-2xl font-semibold text-green-700 mb-4">Special Menu for you</h2>
          <div id="foodGrid" class="grid grid-cols-5 gap-4">
            <% foodItems.forEach(item => { %>
              <div class="bg-white rounded-lg shadow overflow-hidden food-card" data-section="<%= item.section %>">
                <img src="<%= item.imageUrl %>" alt="<%= item.name %>" class="w-full h-24 object-cover">
                <div class="p-2">
                  <h3 class="text-sm font-semibold text-green-700"><%= item.name %></h3>
                  <p class="text-xs text-gray-600">₹<%= item.price %></p>
                  <button onclick="addToOrder('<%= item._id %>', '<%= item.name %>', <%= item.price %>)"
                          class="mt-1 w-full bg-green-500 text-white text-xs py-1 rounded hover:bg-green-600 transition">
                    ADD
                  </button>
                </div>
              </div>
            <% }) %>
          </div>
        </main>

        <!-- Right Panel: Order Details & Payment -->
        <aside class="w-1/3 bg-white border-l p-6 overflow-y-auto">
          <h2 class="text-xl font-bold text-green-700 mb-4">Order Details</h2>
          <div id="orderDetails">
            <p class="text-gray-600">No items selected.</p>
          </div>
          <div id="orderTotals" class="mt-4 space-y-2 hidden">
            <div class="flex justify-between">
              <span>Subtotal</span>
              <span id="subtotal">₹0.00</span>
            </div>
          </div>
          <!-- Payment Section -->
          <div class="mt-6">
            <div class="mb-4">
              <label class="block text-sm font-semibold text-gray-700 mb-1">Payment Method</label>
              <div class="flex space-x-4">
                <label class="inline-flex items-center">
                  <input type="radio" name="paymentMode" value="Cash" class="form-radio" checked>
                  <span class="ml-2">Cash</span>
                </label>
                <label class="inline-flex items-center">
                  <input type="radio" name="paymentMode" value="UPI" class="form-radio">
                  <span class="ml-2">UPI</span>
                </label>
              </div>
            </div>
            <!-- UPI Payment Section: shows active UPI id and QR code if available -->
            <div id="upiSection" class="mb-4 hidden">
              <p class="text-sm text-gray-700">Active UPI ID: <strong><%= activeUpi ? activeUpi.upiId : "Not Set" %></strong></p>
              <div id="qrcode" class="mt-2"></div>
              <button onclick="completeOrder()" class="mt-2 w-full bg-green-600 text-white py-1 rounded hover:bg-green-700 transition">Complete Order</button>
            </div>
            <!-- For Cash, just show the Make Order button -->
            <div id="cashSection">
              <button onclick="makeOrder()" class="w-full bg-green-500 text-white py-2 rounded hover:bg-green-600 transition">
                Make Order
              </button>
            </div>
          </div>
        </aside>
      </div>
    </div>
  </div>

  <!-- Inline Script for Order Functionality -->
  <script>
    // Show/hide payment sections based on payment method selection
    document.querySelectorAll('input[name="paymentMode"]').forEach(radio => {
      radio.addEventListener('change', function() {
        if (this.value === 'UPI') {
          document.getElementById('cashSection').classList.add('hidden');
          document.getElementById('upiSection').classList.remove('hidden');
          // Generate QR code using active UPI id and current subtotal (after a short delay to ensure orderTotals updated)
          setTimeout(generateQRCode, 500);
        } else {
          document.getElementById('upiSection').classList.add('hidden');
          document.getElementById('cashSection').classList.remove('hidden');
        }
      });
    });

    // Global order object: key = foodItem id, value = { name, price, quantity }
    let orderItems = {};

    // Function to add item to order
    function addToOrder(id, name, price) {
      if (orderItems[id]) {
        orderItems[id].quantity++;
      } else {
        orderItems[id] = { name, price, quantity: 1 };
      }
      updateOrderDetails();
    }

    // Function to update item quantity (plus/minus)
    function updateQuantity(id, delta) {
      if (orderItems[id]) {
        orderItems[id].quantity += delta;
        if (orderItems[id].quantity <= 0) {
          delete orderItems[id];
        }
      }
      updateOrderDetails();
    }

    // Function to remove an item entirely
    function removeFromOrder(id) {
      delete orderItems[id];
      updateOrderDetails();
    }

    // Function to update the Order Details panel
    function updateOrderDetails() {
      const orderDetailsDiv = document.getElementById('orderDetails');
      const orderTotalsDiv = document.getElementById('orderTotals');
      orderDetailsDiv.innerHTML = '';

      let subtotal = 0;
      if (Object.keys(orderItems).length === 0) {
        orderDetailsDiv.innerHTML = '<p class="text-gray-600">No items selected.</p>';
        orderTotalsDiv.classList.add('hidden');
        return;
      }
      orderTotalsDiv.classList.remove('hidden');

      const ul = document.createElement('ul');
      for (const id in orderItems) {
        const item = orderItems[id];
        subtotal += item.price * item.quantity;
        const li = document.createElement('li');
        li.className = "flex justify-between items-center py-2 border-b";
        li.innerHTML = `
          <span class="text-sm">${item.name}</span>
          <div class="flex items-center space-x-2">
            <button onclick="updateQuantity('${id}', -1)" class="px-2 py-1 bg-gray-200 rounded">-</button>
            <span class="text-sm">${item.quantity}</span>
            <button onclick="updateQuantity('${id}', 1)" class="px-2 py-1 bg-gray-200 rounded">+</button>
          </div>
          <span class="text-sm">₹${(item.price * item.quantity).toFixed(2)}</span>
          <button onclick="removeFromOrder('${id}')" class="text-red-500 ml-2 text-xs">Remove</button>
        `;
        ul.appendChild(li);
      }
      orderDetailsDiv.appendChild(ul);
      document.getElementById('subtotal').innerText = `₹${subtotal.toFixed(2)}`;
    }

    // Function to filter food items by section
    function filterBySection(section) {
      const cards = document.querySelectorAll('.food-card');
      cards.forEach(card => {
        if (section === 'All' || card.getAttribute('data-section') === section) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    }

    // Function to generate a 6-digit order id (e.g., "#456856")
    function generateOrderId() {
      const num = Math.floor(100000 + Math.random() * 900000);
      return "#" + num;
    }

    // Function to generate QR code for UPI payment
    function generateQRCode() {
      // Get current subtotal from the page
      const subtotalText = document.getElementById('subtotal').innerText;
      // Extract numeric value (assumes format "₹<amount>")
      const amount = parseFloat(subtotalText.replace('₹',''));
      
      // Get the active UPI id from the server-passed variable (injected in template)
      const activeUpi = "<%= activeUpi ? activeUpi.upiId : '' %>";
      
      if (!activeUpi) {
        alert("No active UPI ID set in the system.");
        return;
      }
      
      // Build UPI URL (this is a sample; adjust parameters as needed)
      const upiUrl = `upi://pay?pa=${activeUpi}&pn=Canteen&am=${amount.toFixed(2)}&cu=INR`;
      
      // Generate QR code in the div with id "qrcode"
      document.getElementById('qrcode').innerHTML = ''; // Clear previous
      new QRCode(document.getElementById('qrcode'), {
        text: upiUrl,
        width: 128,
        height: 128,
      });
    }

    // Function to place the order via AJAX (for Cash payments)
    function makeOrder() {
      if (Object.keys(orderItems).length === 0) {
        alert("Please add at least one item to the order.");
        return;
      }
      
      const paymentMode = document.querySelector('input[name="paymentMode"]:checked').value;
      
      if (paymentMode === "Cash") {
        const orderId = generateOrderId();
        const data = {
          orderId: orderId,
          paymentMode: paymentMode,
          upiId: "", // Not needed for Cash
          orderItems: JSON.stringify(orderItems)
        };

        fetch("/orders/place-pos", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(result => {
          if(result.success) {
            showNotification("Order Placed: " + orderId);
            orderItems = {};
            updateOrderDetails();
          } else {
            alert("Error placing order: " + result.message);
          }
        })
        .catch(err => {
          console.error(err);
          alert("Error placing order.");
        });
      } else {
        // For UPI, do nothing here; the process continues with the "Complete Order" button.
        alert("Please scan the QR code and then click 'Complete Order'.");
      }
    }

    // Function to complete the UPI order (after QR scan/payment confirmation)
    function completeOrder() {
      if (Object.keys(orderItems).length === 0) {
        alert("No items in order.");
        return;
      }
      
      const paymentMode = "UPI";
      // Active UPI is fetched from server and already shown as QR code
      const activeUpi = "<%= activeUpi ? activeUpi.upiId : '' %>";
      if (!activeUpi) {
        alert("No active UPI ID set.");
        return;
      }
      
      const orderId = generateOrderId();
      const data = {
        orderId: orderId,
        paymentMode: paymentMode,
        upiId: activeUpi,
        orderItems: JSON.stringify(orderItems)
      };

      fetch("/orders/place-pos", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(data)
      })
      .then(response => response.json())
      .then(result => {
        if(result.success) {
          showNotification("Order Placed: " + orderId);
          orderItems = {};
          updateOrderDetails();
        } else {
          alert("Error placing order: " + result.message);
        }
      })
      .catch(err => {
        console.error(err);
        alert("Error placing order.");
      });
    }

    // Function to show a notification at the top of the page
    function showNotification(message) {
      const notificationDiv = document.getElementById('notification');
      notificationDiv.innerText = message;
      notificationDiv.classList.remove('hidden');
      setTimeout(() => {
        notificationDiv.classList.add('hidden');
      }, 3000);
    }
  </script>
</body>
</html>
