<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Dashboard - Canteen POS</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- Include QRCode.js -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>

  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');
    body {
      font-family: 'Inter', sans-serif;
      background-color: #fff;
    }
    /* Popup styling */
    #upiPopup {
      display: none; /* hidden by default */
      position: fixed;
      inset: 0;
      background-color: rgba(0,0,0,0.5);
      z-index: 999;
      align-items: center;
      justify-content: center;
    }
    #upiPopupContent {
      background: #fff;
      padding: 2rem;
      border-radius: 0.5rem;
      min-width: 300px;
    }
  </style>
</head>
<body class="font-sans">
  <!-- Notification Div (initially hidden) -->
  <div id="notification" class="fixed top-0 left-0 right-0 bg-green-500 text-white p-4 text-center hidden"></div>

  <!-- UPI Popup (for QR code + Payment Completed) -->
  <div id="upiPopup" class="flex">
    <div id="upiPopupContent" class="relative">
      <h2 class="text-lg font-bold text-gray-700 mb-2">UPI Payment</h2>
      <!-- QR code container -->
      <div id="qrcode" class="mx-auto my-4"></div>
      <button
        onclick="paymentCompleted()"
        class="mt-2 w-full bg-green-600 text-white py-2 rounded hover:bg-green-700 transition text-sm"
      >
        Payment Completed
      </button>
      <!-- Close icon (optional) -->
      <button
        class="absolute top-2 right-2 text-gray-400 hover:text-gray-600"
        onclick="closeUpiPopup()"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none"
             viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round"
                d="M6 18L18 6M6 6l12 12"/>
        </svg>
      </button>
    </div>
  </div>

  <div class="flex min-h-screen">
    <!-- Left Sidebar -->
    <aside class="w-64 bg-white border-r shadow flex flex-col">
      <div class="p-6">
        <h2 class="text-2xl font-bold text-green-600">Canteen Logo</h2>
      </div>
      <nav class="flex-1">
        <ul>
          <li>
            <a href="/dashboard" class="block py-3 px-6 text-gray-700 hover:bg-gray-50">Home</a>
          </li>
          <li>
            <a href="/orders/list" class="block py-3 px-6 text-gray-700 hover:bg-gray-50">Order List</a>
          </li>
          <li>
            <a href="/orders/online" class="block py-3 px-6 text-gray-700 hover:bg-gray-50">Online Orders</a>
          </li>
          <li>
            <a href="/dashboard/settings" class="block py-3 px-6 text-gray-700 hover:bg-gray-50">Settings</a>
          </li>
        </ul>
      </nav>
      <div class="p-6 border-t">
        <div class="flex items-center">
          <span class="ml-3 text-green-600 font-semibold"><%= user.username %></span>
          <a href="/dashboard/logout" class="ml-auto text-red-500 hover:underline">Logout</a>
        </div>
      </div>
    </aside>

    <!-- Main Content Area -->
    <div class="flex-1 flex flex-col">
      <!-- Top Bar -->
      <header class="bg-white shadow p-4 flex items-center justify-between">
        <!-- Search bar -->
        <div class="flex-1 max-w-md">
          <input 
            type="text"
            placeholder="Search products..."
            class="w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-green-400 text-sm"
          />
        </div>
        <!-- Removed "Select Table" button as requested -->
      </header>

      <!-- Sub-Header for Category Menu -->
      <div class="bg-white p-4 border-b">
        <ul class="flex space-x-4 text-sm">
          <li>
            <a
              href="#"
              class="px-4 py-2 bg-white text-green-600 border border-green-600 rounded hover:bg-green-50"
              onclick="filterBySection('All')"
            >
              All
            </a>
          </li>
          <% sections.forEach(section => { %>
            <li>
              <a
                href="#"
                class="px-4 py-2 bg-white text-green-600 border border-green-600 rounded hover:bg-green-50"
                onclick="filterBySection('<%= section %>')"
              >
                <%= section %>
              </a>
            </li>
          <% }) %>
        </ul>
      </div>

      <div class="flex flex-1 overflow-hidden">
        <!-- Main Panel: Food Menu -->
        <main class="flex-1 p-4 overflow-y-auto">
          <!-- Menu Title -->
          <div class="mb-4 flex items-center">
            <h2 class="text-xl font-semibold text-gray-800">Menu</h2>
          </div>

          <!-- Food Items Grid -->
          <div id="foodGrid" class="grid grid-cols-4 gap-4">
            <% foodItems.forEach(item => { %>
              <div class="bg-white rounded-lg shadow-sm overflow-hidden food-card" data-section="<%= item.section %>">
                <img
                  src="<%= item.imageUrl %>"
                  alt="<%= item.name %>"
                  class="w-full h-32 object-cover"
                />
                <div class="p-2">
                  <h3 class="text-sm font-semibold text-gray-700"><%= item.name %></h3>
                  <p class="text-xs text-gray-600">₹<%= item.price %></p>
                  <button
                    onclick="addToOrder('<%= item._id %>', '<%= item.name %>', '<%= item.price %>')"
                    class="mt-2 w-full bg-green-500 text-white text-xs py-1 rounded hover:bg-green-600 transition"
                  >
                    ADD
                  </button>
                </div>
              </div>
            <% }) %>
          </div>
        </main>

        <!-- Right Panel: Order Details & Payment -->
        <aside class="w-1/3 bg-white border-l p-4 overflow-y-auto">
          <!-- “Order Details” Title -->
          <div class="flex items-center justify-between mb-4">
            <h2 class="text-lg font-bold text-gray-800">Order Details</h2>
          </div>

          <!-- Order Items -->
          <div id="orderDetails" class="space-y-2">
            <p class="text-gray-600 text-sm">No items selected.</p>
          </div>

          <!-- Totals -->
          <div id="orderTotals" class="mt-4 space-y-2 hidden">
            <div class="flex justify-between text-sm">
              <span>Subtotal</span>
              <span id="subtotal">₹0.00</span>
            </div>
          </div>

          <!-- Payment Section -->
          <div class="mt-6 border-t pt-4">
            <div class="mb-4">
              <label class="block text-sm font-semibold text-gray-700 mb-1">
                Payment Method
              </label>
              <div class="flex space-x-4">
                <label class="inline-flex items-center text-sm">
                  <input
                    type="radio"
                    name="paymentMode"
                    value="Cash"
                    class="form-radio"
                    checked
                  />
                  <span class="ml-2">Cash</span>
                </label>
                <label class="inline-flex items-center text-sm">
                  <input
                    type="radio"
                    name="paymentMode"
                    value="UPI"
                    class="form-radio"
                  />
                  <span class="ml-2">UPI</span>
                </label>
              </div>
            </div>

            <!-- UPI Payment Section (hidden initially) -->
            <div id="upiSection" class="mb-4 hidden">
              <p class="text-sm text-gray-700 mb-2">
                Active UPI ID:
                <strong><%= activeUpi ? activeUpi.upiId : "Not Set" %></strong>
              </p>
            </div>

            <!-- Common "Make Order" Button -->
            <button
              onclick="makeOrder()"
              class="w-full bg-green-500 text-white py-2 rounded hover:bg-green-600 transition text-sm"
            >
              Make Order
            </button>
          </div>
        </aside>
      </div>
    </div>
  </div>

  <!-- Inline Script for Order Functionality -->
  <script>
    // Show/hide payment sections based on payment method selection
    document.querySelectorAll('input[name="paymentMode"]').forEach(radio => {
      radio.addEventListener('change', function() {
        if (this.value === 'UPI') {
          document.getElementById('upiSection').classList.remove('hidden');
        } else {
          document.getElementById('upiSection').classList.add('hidden');
        }
      });
    });

    // Global order object: key = foodItem id, value = { name, price, quantity }
    let orderItems = {};

    // Store the newly created order ID so we can update it to "Paid"
    let currentOrderId = null;

    // Function to add item to order
    function addToOrder(id, name, price) {
      if (orderItems[id]) {
        orderItems[id].quantity++;
      } else {
        orderItems[id] = { name, price, quantity: 1 };
      }
      updateOrderDetails();
    }

    // Function to update item quantity (plus/minus)
    function updateQuantity(id, delta) {
      if (orderItems[id]) {
        orderItems[id].quantity += delta;
        if (orderItems[id].quantity <= 0) {
          delete orderItems[id];
        }
      }
      updateOrderDetails();
    }

    // Function to remove an item entirely
    function removeFromOrder(id) {
      delete orderItems[id];
      updateOrderDetails();
    }

    // Function to update the Order Details panel
    function updateOrderDetails() {
      const orderDetailsDiv = document.getElementById('orderDetails');
      const orderTotalsDiv = document.getElementById('orderTotals');
      orderDetailsDiv.innerHTML = '';

      let subtotal = 0;
      if (Object.keys(orderItems).length === 0) {
        orderDetailsDiv.innerHTML = '<p class="text-gray-600 text-sm">No items selected.</p>';
        orderTotalsDiv.classList.add('hidden');
        return;
      }
      orderTotalsDiv.classList.remove('hidden');

      const ul = document.createElement('ul');
      ul.className = "divide-y";
      for (const id in orderItems) {
        const item = orderItems[id];
        subtotal += item.price * item.quantity;
        const li = document.createElement('li');
        li.className = "flex justify-between items-center py-2";
        li.innerHTML = `
          <span class="text-sm text-gray-700">${item.name}</span>
          <div class="flex items-center space-x-2">
            <button
              onclick="updateQuantity('${id}', -1)"
              class="px-2 py-1 bg-gray-200 rounded text-sm"
            >
              -
            </button>
            <span class="text-sm">${item.quantity}</span>
            <button
              onclick="updateQuantity('${id}', 1)"
              class="px-2 py-1 bg-gray-200 rounded text-sm"
            >
              +
            </button>
          </div>
          <span class="text-sm text-gray-700">
            ₹${(item.price * item.quantity).toFixed(2)}
          </span>
          <button
            onclick="removeFromOrder('${id}')"
            class="text-red-500 ml-2 text-xs"
          >
            Remove
          </button>
        `;
        ul.appendChild(li);
      }
      orderDetailsDiv.appendChild(ul);
      document.getElementById('subtotal').innerText = `₹${subtotal.toFixed(2)}`;
    }

    // Function to filter food items by section
    function filterBySection(section) {
      const cards = document.querySelectorAll('.food-card');
      cards.forEach(card => {
        if (section === 'All' || card.getAttribute('data-section') === section) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    }

    // Function to generate a 6-digit order id (e.g., "#456856")
    function generateOrderId() {
      const num = Math.floor(100000 + Math.random() * 900000);
      return "#" + num;
    }

    // Show UPI popup, generate QR code
    function showUpiPopup() {
      const popup = document.getElementById('upiPopup');
      popup.style.display = 'flex'; // show
      generateQRCode(); // generate the QR code
    }

    // Close UPI popup
    function closeUpiPopup() {
      const popup = document.getElementById('upiPopup');
      popup.style.display = 'none';
    }

    // “Make Order” button handler
    function makeOrder() {
      if (Object.keys(orderItems).length === 0) {
        alert("Please add at least one item to the order.");
        return;
      }
      const paymentMode = document.querySelector('input[name="paymentMode"]:checked').value;

      // 1) Create order in DB with "Pending" status
      const orderId = generateOrderId();
      const data = {
        orderId: orderId,
        paymentMode: paymentMode,
        upiId: (paymentMode === 'UPI') ? "<%= activeUpi ? activeUpi.upiId : '' %>" : "",
        orderItems: JSON.stringify(orderItems)
      };

      fetch("/orders/place-pos", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(data)
      })
      .then(response => response.json())
      .then(result => {
        if(result.success) {
          // Store the newly created order ID
          currentOrderId = result.orderId || orderId;
          showNotification("Order Placed: " + currentOrderId);

          // If UPI, show popup for QR code & final payment
          if (paymentMode === "UPI") {
            showUpiPopup();
          } else {
            // If Cash, we can clear items right away
            orderItems = {};
            updateOrderDetails();
          }
        } else {
          alert("Error placing order: " + result.message);
        }
      })
      .catch(err => {
        console.error(err);
        alert("Error placing order.");
      });
    }

    // Generate QR code for UPI payment
    function generateQRCode() {
      const subtotalText = document.getElementById('subtotal').innerText;
      const amount = parseFloat(subtotalText.replace('₹',''));
      const activeUpi = "<%= activeUpi ? activeUpi.upiId : '' %>";

      if (!activeUpi) {
        alert("No active UPI ID set in the system.");
        return;
      }

      const upiUrl = `upi://pay?pa=${activeUpi}&pn=Canteen&am=${amount.toFixed(2)}&cu=INR`;
      document.getElementById('qrcode').innerHTML = '';
      new QRCode(document.getElementById('qrcode'), {
        text: upiUrl,
        width: 128,
        height: 128,
      });
    }

    // Called when “Payment Completed” is clicked in the popup
    function paymentCompleted() {
      completeOrder(); // calls the existing function to update status to "Paid"
      closeUpiPopup();
    }

    // “Complete Order” logic – updates existing order from “Pending” to “Paid”
    function completeOrder() {
      if (!currentOrderId) {
        alert("No current order to complete.");
        return;
      }
      // Send request to update the order status to "Paid"
      fetch("/orders/complete-payment", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          orderId: currentOrderId
        })
      })
      .then(response => response.json())
      .then(result => {
        if(result.success) {
          showNotification("Order Updated to Paid: " + currentOrderId);
          // Clear items and update UI
          orderItems = {};
          updateOrderDetails();
          currentOrderId = null;
        } else {
          alert("Error updating order status: " + result.message);
        }
      })
      .catch(err => {
        console.error(err);
        alert("Error updating order status.");
      });
    }
    // Notification
    function showNotification(message) {
      const notificationDiv = document.getElementById('notification');
      notificationDiv.innerText = message;
      notificationDiv.classList.remove('hidden');
      setTimeout(() => {
        notificationDiv.classList.add('hidden');
      }, 3000);
    }
  </script>
</body>
</html>
