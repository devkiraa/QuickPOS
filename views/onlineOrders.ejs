<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Online Orders - Payment Reception</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');
    body {
      font-family: 'Inter', sans-serif;
      background-color: #fff;
    }
    @media (max-width: 640px) {
      table { font-size: 0.875rem; }
    }
    /* Modal styles */
    .modal-overlay {
      position: fixed;
      inset: 0;
      background: rgba(0, 0, 0, 0.5);
      display: none;
      align-items: center;
      justify-content: center;
      z-index: 50;
    }
  </style>
</head>
<body class="bg-gray-50">
  <div class="flex min-h-screen">
    <!-- Sidebar -->
    <aside class="w-64 bg-white border-r shadow flex flex-col">
      <div class="p-6">
        <h2 class="text-2xl font-bold text-green-600">Canteen Logo</h2>
      </div>
      <nav class="flex-1">
        <ul>
          <li>
            <a href="/dashboard" class="block py-3 px-6 text-gray-700 hover:bg-gray-50">Home</a>
          </li>
          <li>
            <a href="/orders/list" class="block py-3 px-6 text-gray-700 hover:bg-gray-50">Order List</a>
          </li>
          <li>
            <a href="/orders/online" class="block py-3 px-6 text-gray-700 hover:bg-gray-50">Online Orders</a>
          </li>
          <li>
            <a href="/dashboard/settings" class="block py-3 px-6 text-gray-700 hover:bg-gray-50">Settings</a>
          </li>
        </ul>
      </nav>
      <div class="p-6 border-t">
        <div class="flex items-center">
          <span class="ml-3 text-green-600 font-semibold"><%= user.username %></span>
          <a href="/dashboard/logout" class="ml-auto text-red-500 hover:underline">Logout</a>
        </div>
      </div>
    </aside>

    <!-- Main Content -->
    <div class="flex-1 p-6">
      <h1 class="text-3xl font-bold text-green-600 mb-6 text-center">Online Orders</h1>
      <table class="min-w-full bg-white rounded-lg shadow overflow-hidden">
        <thead class="bg-green-500 text-white">
          <tr>
            <th class="py-3 px-4">Ref Number</th>
            <th class="py-3 px-4">Order ID (Secure)</th>
            <th class="py-3 px-4">Customer</th>
            <th class="py-3 px-4">Mobile</th>
            <th class="py-3 px-4">Total (₹)</th>
            <th class="py-3 px-4">Status</th>
            <th class="py-3 px-4">Action</th>
          </tr>
        </thead>
        <tbody>
          <% orders.forEach(order => { %>
            <tr class="border-b">
              <td class="py-2 px-4 text-center font-semibold"><%= order.orderNumber %></td>
              <td class="py-2 px-4 text-center"><%= order.orderId %></td>
              <td class="py-2 px-4"><%= order.customerName %></td>
              <td class="py-2 px-4"><%= order.mobile %></td>
              <td class="py-2 px-4 text-right font-semibold">₹<%= order.totalAmount.toFixed(2) %></td>
              <td class="py-2 px-4 text-center"><%= order.status %></td>
              <td class="py-2 px-4 text-center">
                <% if(order.status === "Pending") { %>
                  <button onclick="openPaymentModal('<%= order.orderId %>', <%= order.totalAmount %>)" class="bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded">Continue Order</button>
                <% } else { %>
                  <span class="text-green-600 font-bold">Paid</span>
                <% } %>
              </td>
            </tr>
            <tr class="bg-gray-50">
              <td colspan="7" class="py-2 px-4">
                <strong>Items:</strong>
                <ul class="list-disc list-inside">
                  <% order.items.forEach(function(item) { %>
                    <li>
                      <%= item.foodItem ? item.foodItem.name : "Item" %> &mdash; Qty: <%= item.quantity %>
                    </li>
                  <% }); %>
                </ul>
              </td>
            </tr>
          <% }); %>
        </tbody>
      </table>
    </div>
  </div>

  <!-- Payment Modal Popup -->
  <div id="paymentModal" class="modal-overlay">
    <div class="bg-white p-6 rounded shadow-lg max-w-md w-full">
      <h2 class="text-xl font-bold mb-4">Continue Order Payment</h2>
      <p id="orderInfo" class="mb-4"></p>
      <div class="mb-4">
        <label class="inline-flex items-center mr-4">
          <input type="radio" name="paymentMode" value="Cash" class="form-radio" checked>
          <span class="ml-2">Cash</span>
        </label>
        <label class="inline-flex items-center">
          <input type="radio" name="paymentMode" value="UPI" class="form-radio">
          <span class="ml-2">UPI</span>
        </label>
      </div>
      <div id="upiSection" class="mb-4 hidden">
        <p class="mb-2">Scan QR Code to pay via UPI:</p>
        <!-- The QR code is generated using the active UPI id and the order amount -->
        <img id="upiQr" src="" alt="UPI QR Code" class="mx-auto mb-2">
      </div>
      <div class="flex justify-end">
        <button onclick="cancelOrder()" class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded mr-2">Cancel Order</button>
        <button onclick="completeOrder()" class="bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded">Complete Order</button>
      </div>
      <div class="mt-4 text-right">
        <button onclick="closeModal()" class="text-gray-500 hover:underline">Close</button>
      </div>
    </div>
  </div>

  <!-- Inline Script for Payment Modal and Order Actions -->
  <script>
    let currentOrderId = "";
    let currentAmount = 0;

    // Open the payment modal and set order details
    function openPaymentModal(orderId, amount) {
      currentOrderId = orderId;
      currentAmount = amount;
      document.getElementById('orderInfo').innerText = "Order ID: " + orderId + " | Amount: ₹" + amount.toFixed(2);
      // Reset radio button to default (Cash) and hide UPI section
      document.querySelector('input[name="paymentMode"][value="Cash"]').checked = true;
      document.getElementById('upiSection').classList.add('hidden');
      // Show the modal
      document.getElementById('paymentModal').style.display = "flex";
    }

    // Close the modal
    function closeModal() {
      document.getElementById('paymentModal').style.display = "none";
    }

    // Listen for changes in payment mode to toggle UPI section visibility
    document.querySelectorAll('input[name="paymentMode"]').forEach(radio => {
      radio.addEventListener('change', function() {
        if (this.value === "UPI") {
          // Construct a QR code URL using the active UPI id and order amount.
          // The active UPI id is provided from EJS.
          const upiId = "<%= (activeUpi && activeUpi.upiId) ? activeUpi.upiId : '' %>";
          // Construct UPI URI with tn parameter using the order details.
          const tn = encodeURIComponent("Payment for Order #" + currentOrderId);
          const qrUrl = "https://api.qrserver.com/v1/create-qr-code/?data=" + 
            encodeURIComponent("upi://pay?pa=" + upiId + "&am=" + currentAmount.toFixed(2) + "&cu=INR&tn=" + tn);
          document.getElementById('upiQr').src = qrUrl;
          document.getElementById('upiSection').classList.remove('hidden');
        } else {
          document.getElementById('upiSection').classList.add('hidden');
        }
      });
    });

    // Complete the order by updating payment status
    function completeOrder() {
      const paymentMode = document.querySelector('input[name="paymentMode"]:checked').value;
      const data = { 
        orderId: currentOrderId,
        paymentMode: paymentMode
      };
      if (paymentMode === "UPI") {
        data.upiId = "<%= (activeUpi && activeUpi.upiId) ? activeUpi.upiId : '' %>";
      }
      fetch("/orders/complete-payment", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(data)
      })
      .then(response => response.json())
      .then(result => {
        if (result.success) {
          alert("Order " + currentOrderId + " marked as Paid.");
          closeModal();
          location.reload();
        } else {
          alert("Error: " + result.message);
        }
      })
      .catch(err => {
        console.error(err);
        alert("Error completing order.");
      });
    }

    // Cancel the order (delete from database)
    function cancelOrder() {
      if (confirm("Are you sure you want to cancel Order " + currentOrderId + "? This will remove the order from the database.")) {
        fetch("/orders/delete/" + currentOrderId, {
          method: "DELETE"
        })
        .then(response => response.json())
        .then(result => {
          if (result.success) {
            alert("Order " + currentOrderId + " cancelled.");
            closeModal();
            location.reload();
          } else {
            alert("Error: " + result.message);
          }
        })
        .catch(err => {
          console.error(err);
          alert("Error cancelling order.");
        });
      }
    }
  </script>
</body>
</html>
